{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/card-list/card-list.component.jsx","components/searchBox/search.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","monster","className","src","name","email","CardList","pocketMonsters","map","SearchBar","placeHolder","handleChange","type","placeholder","onChange","App","state","searchMonster","fetch","then","response","json","users","setState","this","filteredMonster","filter","mon","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,GCFE,I,kBDEK,SAAAC,GACnB,OACE,sBAAKC,GAAID,EAAME,QAAQD,GAAIE,UAAU,OAArC,UACI,qBAAKC,IAAG,+BAA0BJ,EAAME,QAAQD,GAAxC,4BACR,oBAAIA,GAAID,EAAME,QAAQD,GAAtB,SAA2BD,EAAME,QAAQG,OACzC,oBAAIJ,GAAE,eAAUD,EAAME,QAAQD,IAA9B,SAAqCD,EAAME,QAAQI,aEH7CC,EAAS,SAAAP,GACrB,OACG,qBAAKG,UAAU,eAAf,SACAH,EAAMQ,eAAeC,KAAI,SAAAD,GAAc,OACnC,cAAC,EAAD,CAA8BN,QAASM,GAA5BA,EAAeP,QAFI,aCHzBS,G,MAAU,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACjC,OACI,uBAEAC,KAAK,SACLV,UAAU,YACVF,GAAG,eACHa,YAAaH,EAAaI,SAAUH,GAJhC,mBC0BGI,E,kDAzBb,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTT,eAAgB,GAChBU,cAAc,IAJL,E,gEAOO,IAAD,OACjBC,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAAChB,eAAee,S,+BAEnC,IAAD,SAC8BE,KAAKR,MAAnCT,EADA,EACAA,eAAeU,EADf,EACeA,cACfQ,EAAgBlB,EAAemB,QAAO,SAAAC,GAAG,OAAEA,EAAIvB,KAAKwB,cAAcC,SAASZ,MACjF,OACE,sBAAKf,UAAU,MAAf,UACE,oBAAIF,GAAG,YAAP,6BACA,cAAC,EAAD,CAAWU,YAAY,iBAAiBC,aAAc,SAAAmB,GAAC,OAAE,EAAKP,SAAS,CAACN,cAAca,EAAEC,OAAOC,WAC/F,cAAC,EAAD,CAAUzB,eAAgBkB,W,GApBhBQ,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a9fd3f40.chunk.js","sourcesContent":["import React from 'react';\nimport './card.style.css';\nexport const Card = props=>\n{return(\n   <div id={props.monster.id} className='card' >\n       <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n       <h2 id={props.monster.id}>{props.monster.name}</h2>\n       <h2 id={`email${props.monster.id}`}>{props.monster.email}</h2>\n   </div>\n)};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card-list.style.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList=props=>{   \n return(\n    <div className='cardListMain' key='cardList'>{\n    props.pocketMonsters.map(pocketMonsters=>\n        <Card key={pocketMonsters.id} monster={pocketMonsters}/>\n        )}\n    </div>);\n};\n","import React from 'react';\nimport './searchBox.style.css';\n\nexport const SearchBar=({placeHolder,handleChange})=>{\n    return (\n        <input \n        key='searchMonster'\n        type='search' \n        className='searchBox' \n        id='mosterSearch' \n        placeholder={placeHolder} onChange={handleChange}/>\n    );\n};","import logo from './logo.svg';\nimport React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBar} from './components/searchBox/search.component';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state={\n      pocketMonsters: [],\n      searchMonster:[]\n    };\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\").\n    then(response=>response.json()).\n    then(users=>this.setState({pocketMonsters:users}));\n  }\n  render(){\n    const{pocketMonsters,searchMonster}=this.state;\n    const filteredMonster=pocketMonsters.filter(mon=>mon.name.toLowerCase().includes(searchMonster))\n    return (\n      <div className=\"App\">\n        <h1 id='pageTitle'>Monster Rolodex</h1>\n        <SearchBar placeHolder='Search Monster' handleChange={e=>this.setState({searchMonster:e.target.value})}></SearchBar>\n        <CardList pocketMonsters={filteredMonster}></CardList>      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}